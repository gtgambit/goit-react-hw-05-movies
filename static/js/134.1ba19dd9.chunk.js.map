{"version":3,"file":"static/js/134.1ba19dd9.chunk.js","mappings":"2LACA,GAAiB,E,SCEJA,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAAA,MAAf,SACGJ,EAAOK,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CACEJ,UAAWC,EAAAA,KACXI,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMT,GAHjB,SAKGM,KANID,EAUZ,KAGN,C,0HCoCD,UAnDe,WAAO,IAAD,EACnB,GAA4CK,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCP,EAAAA,EAAAA,WAAS,GAA3C,eAAOQ,EAAP,KAAkBC,EAAlB,KACMC,EAAK,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAoB,mCAAG,WAAMH,GAAN,uFAEzBD,GAAa,GAFY,UAGIK,EAAAA,EAAAA,IAAgBJ,GAHpB,OAGnBT,EAHmB,OAIzBC,EAAkBD,EAAec,SAJR,gDAMzBX,EAAU,KAAMY,SAChBC,QAAQC,IAAIf,GAPa,yBASzBM,GAAa,GATY,4EAAH,sDAYrBC,GACLG,EAAqBH,EACtB,GAAE,CAACA,EAAOP,IAWX,OACE,+BACE,kBAAMgB,SAXW,SAAAC,GACnBA,EAAMC,iBACsD,KAAxDD,EAAME,OAAOC,SAAS,GAAGC,MAAMC,OAAOC,cAI1CnB,EAAgB,CAAEG,MAAOU,EAAME,OAAOC,SAAS,GAAGC,QAHhDG,MAAM,8BAIT,EAIG,WACE,kBAAOC,KAAK,GAAGC,KAAK,OAAOC,YAAY,mBAAmBC,UAAQ,KAClE,mBAAQF,KAAK,SAAb,wBAEF,0BACE,0BACE,0BACGrB,IAAa,SAAC,IAAD,KACd,SAAC,IAAD,CAAWnB,OAAQY,aAM9B,C,+LCtDD+B,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAU,sBAAuB,CACtDG,OAAQ,CACNC,KAAM,KAHqB,uBACvBC,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qDASjBvB,EAAe,mCAAG,WAAMJ,GAAN,yFACNsB,EAAAA,EAAAA,IAAU,iBAAkB,CACjDG,OAAQ,CACNzB,MAAAA,KAHyB,uBACrB2B,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,sDASfC,EAAY,mCAAG,WAAMC,GAAN,yFACHP,EAAAA,EAAAA,IAAA,iBAAoBO,IADjB,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAc,mCAAG,WAAMD,GAAN,yFACLP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,aADK,uBACpBF,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAW,mCAAG,WAAMF,GAAN,yFACFP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,aADE,uBACjBF,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qD","sources":["components/MovieList/MovieList.module.css","components/MovieList/MovieList.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieList.module.css';\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.films}>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link\n              className={css.item}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  Movies: PropTypes.array,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nimport { getMovieByQuery } from 'services/api';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [errors, setErrors] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const getMovieBySearchTerm = async query => {\n      try {\n        setIsLoading(true);\n        const searchedMovies = await getMovieByQuery(query);\n        setSearchedMovies(searchedMovies.results);\n      } catch (error) {\n        setErrors(error.message);\n        console.log(errors);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (!query) return;\n    getMovieBySearchTerm(query);\n  }, [query, errors]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (event.target.elements[0].value.trim().toLowerCase() === '') {\n      alert('Please, enter correct name!');\n      return;\n    }\n    setSearchParams({ query: event.target.elements[0].value });\n  };\n\n  return (\n    <header>\n      <form onSubmit={handleSubmit}>\n        <input name=\"\" type=\"text\" placeholder=\"Enter movie name\" required />\n        <button type=\"submit\">Search</button>\n      </form>\n      <div>\n        <div>\n          <ul>\n            {isLoading && <Loader />}\n            <MovieList movies={searchedMovies} />\n          </ul>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '44d416356c22cc8e7735ee915c193364',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get('/search/movie/', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getReviewsById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data;\n};\n\nexport const getCastById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data;\n};\n"],"names":["MovieList","movies","location","useLocation","className","css","map","id","title","to","state","from","useState","searchedMovies","setSearchedMovies","errors","setErrors","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","query","get","useEffect","getMovieBySearchTerm","getMovieByQuery","results","message","console","log","onSubmit","event","preventDefault","target","elements","value","trim","toLowerCase","alert","name","type","placeholder","required","axios","api_key","getTrendingMovies","params","page","data","getMovieById","movieId","getReviewsById","getCastById"],"sourceRoot":""}