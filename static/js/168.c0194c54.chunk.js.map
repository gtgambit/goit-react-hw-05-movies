{"version":3,"file":"static/js/168.c0194c54.chunk.js","mappings":"4RACA,GAAiB,E,SCKJA,EAAU,WACrB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAO,mCAAG,WAAMH,GAAN,uFAEZH,GAAa,GAFD,UAGcO,EAAAA,EAAAA,IAAeJ,GAH7B,OAGNK,EAHM,OAIZV,EAAUU,EAAYC,SAJV,gDAMZP,EAAU,KAAMQ,SAChBC,QAAQC,IAAIX,GAPA,yBASZD,GAAa,GATD,4EAAH,sDAYbM,EAAQH,EAbY,CAcrB,GAAE,CAACA,EAASF,KAGX,iCACE,oCACCF,IAAa,SAACc,EAAA,EAAD,IACbhB,EAAOiB,OAAS,GACf,wBACGjB,EAAOkB,KAAI,SAAAlB,GACV,OACE,gBAAoBmB,UAAWC,EAAAA,gBAA/B,WACE,eAAGD,UAAWC,EAAAA,OAAd,qBAEE,iBAAMD,UAAWC,EAAAA,WAAjB,SAAkCpB,EAAOqB,aAG3C,iBAAKF,UAAWC,EAAAA,iBAAhB,WACE,cAAGD,UAAWC,EAAAA,aAAd,uBACA,iBAAMD,UAAWC,EAAAA,QAAjB,SAA+BpB,EAAOsB,eARjCtB,EAAOuB,GAYnB,OAGH,cAAGJ,UAAWC,EAAAA,SAAd,gDAIP,EAED,G,+LCxDAI,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAU,sBAAuB,CACtDG,OAAQ,CACNC,KAAM,KAHqB,uBACvBC,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qDASjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAU,gBAAiB,CAChDG,OAAQ,CACNI,MAAAA,KAHyB,uBACrBF,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,sDASfG,EAAY,mCAAG,WAAM1B,GAAN,yFACHkB,EAAAA,EAAAA,IAAA,iBAAoBlB,IADjB,uBAClBuB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZnB,EAAc,mCAAG,WAAMJ,GAAN,yFACLkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,aADK,uBACpBuB,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAW,mCAAG,WAAM3B,GAAN,yFACFkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,aADE,uBACjBuB,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qD","sources":["components/Reviews/Reviews.module.css","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport { getReviewsById } from '../../services/api';\nimport css from './Reviews.module.css';\n\nexport const Reviews = () => {\n  const [review, setReview] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const reviews = async movieId => {\n      try {\n        setIsLoading(true);\n        const dataReviews = await getReviewsById(movieId);\n        setReview(dataReviews.results);\n      } catch (error) {\n        setErrors(error.message);\n        console.log(errors);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    reviews(movieId);\n  }, [movieId, errors]);\n\n  return (\n    <>\n      <h3>Reviews</h3>\n      {isLoading && <Loader />}\n      {review.length > 0 ? (\n        <ul>\n          {review.map(review => {\n            return (\n              <li key={review.id} className={css.reviewContainer}>\n                <p className={css.author}>\n                  Author:\n                  <span className={css.authorName}>{review.author}</span>\n                </p>\n\n                <div className={css.ContentContainer}>\n                  <p className={css.ContentTitle}>Content:</p>\n                  <span className={css.Content}>{review.content}</span>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p className={css.noReview}>Damn! No reviews for such movie!</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '44d416356c22cc8e7735ee915c193364',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getReviewsById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data;\n};\n\nexport const getCastById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data;\n};\n"],"names":["Reviews","useState","review","setReview","isLoading","setIsLoading","errors","setErrors","movieId","useParams","useEffect","reviews","getReviewsById","dataReviews","results","message","console","log","Loader","length","map","className","css","author","content","id","axios","api_key","getTrendingMovies","params","page","data","getMovieByQuery","query","getMovieById","getCastById"],"sourceRoot":""}