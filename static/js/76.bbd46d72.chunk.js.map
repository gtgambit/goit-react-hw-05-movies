{"version":3,"file":"static/js/76.bbd46d72.chunk.js","mappings":"oPACA,GAAiB,E,kBC2DjB,EArDa,WACX,OAAkCA,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,IAjBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAO,mCAAG,WAAMH,GAAN,uFAEZL,GAAa,GAFD,UAGOS,EAAAA,EAAAA,IAAYJ,GAHnB,OAGNF,EAHM,OAIZC,EAAQD,EAAKA,MAJD,gDAMZD,EAAU,KAAMQ,SAChBC,QAAQC,IAAIX,GAPA,yBASZD,GAAa,GATD,4EAAH,sDAYbQ,EAAQH,EAbY,CAcrB,GAAE,CAACA,EAASJ,IAERE,EAEL,OACE,gBAAIU,UAAWC,EAAAA,cAAf,UACGf,IAAa,SAACgB,EAAA,EAAD,IACbZ,EAAKa,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC5C,OACE,gBAAIP,UAAWC,EAAAA,UAAf,WACE,gBAAKD,UAAWC,EAAAA,SAAhB,UACE,gBACED,UAAWC,EAAAA,MACXO,IACEH,EAAY,yCAC0BA,GAClC,+DAENI,IAAKH,OAGT,iBAAKN,UAAWC,EAAAA,QAAhB,WACE,cAAGD,UAAWC,EAAAA,QAAd,SAA4BK,KAC5B,cAAGN,UAAWC,EAAAA,QAAd,SAA4BM,SAdGH,EAkBtC,MAGN,C,+LCxDDM,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAU,sBAAuB,CACtDG,OAAQ,CACNC,KAAM,KAHqB,uBACvBC,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qDASjBC,EAAY,mCAAG,WAAMxB,GAAN,yFACHkB,EAAAA,EAAAA,IAAA,iBAAoBlB,IADjB,uBAClBuB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZE,EAAe,mCAAG,WAAMC,GAAN,yFACNR,EAAAA,EAAAA,IAAU,gBAAiB,CAChDG,OAAQ,CACNK,MAAAA,KAHyB,uBACrBH,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,sDASfI,EAAc,mCAAG,WAAM3B,GAAN,yFACLkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,aADK,uBACpBuB,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdnB,EAAW,mCAAG,WAAMJ,GAAN,yFACFkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,aADE,uBACjBuB,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qD","sources":["components/Cast/Cast.module.css","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport css from './Cast.module.css';\n\nimport { getCastById } from '../../services/api';\n\nconst Cast = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState('');\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getCast = async movieId => {\n      try {\n        setIsLoading(true);\n        const cast = await getCastById(movieId);\n        setCast(cast.cast);\n      } catch (error) {\n        setErrors(error.message);\n        console.log(errors);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCast(movieId);\n  }, [movieId, errors]);\n\n  if (!cast) return;\n\n  return (\n    <ul className={css.castContainer}>\n      {isLoading && <Loader />}\n      {cast.map(({ id, profile_path, original_name, character }) => {\n        return (\n          <li className={css.actorItem} key={id}>\n            <div className={css.actorImg}>\n              <img\n                className={css.image}\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : 'https://www.drupal.org/files/project-images/broken-image.jpg'\n                }\n                alt={original_name}\n              />\n            </div>\n            <div className={css.actInfo}>\n              <p className={css.actName}>{original_name}</p>\n              <p className={css.actChar}>{character}</p>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '44d416356c22cc8e7735ee915c193364',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getReviewsById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data;\n};\n\nexport const getCastById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data;\n};\n"],"names":["useState","isLoading","setIsLoading","errors","setErrors","cast","setCast","movieId","useParams","useEffect","getCast","getCastById","message","console","log","className","css","Loader","map","id","profile_path","original_name","character","src","alt","axios","api_key","getTrendingMovies","params","page","data","getMovieById","getMovieByQuery","query","getReviewsById"],"sourceRoot":""}