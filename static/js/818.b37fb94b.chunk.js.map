{"version":3,"file":"static/js/818.b37fb94b.chunk.js","mappings":"2LACA,GAAiB,E,SCEJA,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAAA,MAAf,SACGJ,EAAOK,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CACEJ,UAAWC,EAAAA,KACXI,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMT,GAHjB,SAKGM,KANID,EAUZ,KAGN,C,sICrBD,GAAgB,IAAM,kB,kBCuCtB,EAjCa,WACX,OAAoCK,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAa,GAFG,UAGaK,EAAAA,EAAAA,MAHb,OAGVC,EAHU,OAKhBR,EAAcQ,EAAeC,SALb,gDAOhBL,EAAU,KAAMM,SAChBC,QAAQC,IAAIT,GARI,yBAUhBD,GAAa,GAVG,4EAAH,qDAajBI,GACD,GAAE,CAACH,KAGF,iBAAKb,UAAWC,EAAAA,YAAhB,WACE,4CACA,0BACGU,IAAa,SAACY,EAAA,EAAD,KACd,SAAC3B,EAAA,EAAD,CAAWC,OAAQY,SAI1B,C,+LCpCDe,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMR,EAAiB,mCAAG,sGACRO,EAAAA,EAAAA,IAAU,sBAAuB,CACtDE,OAAQ,CACNC,KAAM,KAHqB,uBACvBC,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qDASjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAU,iBAAkB,CACjDE,OAAQ,CACNI,MAAAA,KAHyB,uBACrBF,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,sDASfG,EAAY,mCAAG,WAAMC,GAAN,yFACHR,EAAAA,EAAAA,IAAA,iBAAoBQ,IADjB,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAc,mCAAG,WAAMD,GAAN,yFACLR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADK,uBACpBJ,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdM,EAAW,mCAAG,WAAMF,GAAN,yFACFR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADE,uBACjBJ,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qD","sources":["components/MovieList/MovieList.module.css","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/App.module.css?42a9","pages/Home.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieList.module.css';\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.films}>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link\n              className={css.item}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  Movies: PropTypes.array,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"App\":\"App_App__B2Ebb\"};","import React, { useEffect, useState } from 'react';\n\nimport Loader from '../components/Loader/Loader';\nimport { getTrendingMovies } from 'services/api';\nimport css from '../App.module.css';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [moviesData, setMoviesData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState('');\n\n  useEffect(() => {\n    const getTrending = async () => {\n      try {\n        setIsLoading(true);\n        const TrendingMovies = await getTrendingMovies();\n\n        setMoviesData(TrendingMovies.results);\n      } catch (error) {\n        setErrors(error.message);\n        console.log(errors);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getTrending();\n  }, [errors]); // componentDidMount\n\n  return (\n    <div className={css.mainWrapper}>\n      <h2>Trending today</h2>\n      <ul>\n        {isLoading && <Loader />}\n        <MovieList movies={moviesData} />\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '44d416356c22cc8e7735ee915c193364',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get('/search/movie/', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getReviewsById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data;\n};\n\nexport const getCastById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data;\n};\n///\n"],"names":["MovieList","movies","location","useLocation","className","css","map","id","title","to","state","from","useState","moviesData","setMoviesData","isLoading","setIsLoading","errors","setErrors","useEffect","getTrending","getTrendingMovies","TrendingMovies","results","message","console","log","Loader","axios","api_key","params","page","data","getMovieByQuery","query","getMovieById","movieId","getReviewsById","getCastById"],"sourceRoot":""}