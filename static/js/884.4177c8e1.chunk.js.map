{"version":3,"file":"static/js/884.4177c8e1.chunk.js","mappings":"mPA0EA,UAnEqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAASF,GAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,UAwB9C,OAtBAC,EAAAA,EAAAA,YAAU,WACR,GAAKd,EAAL,CAEA,IAAMe,EAAe,mCAAG,WAAMf,GAAN,yFAEpBM,GAAa,GAFO,UAGMU,EAAAA,EAAAA,IAAahB,GAHnB,OAGhBiB,EAHgB,OAIdC,EAASD,EAAcC,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAE1CJ,EAAcC,OAASA,EACvBd,EAAgBa,GAPI,kDASpBT,EAAU,KAAMc,SAChBC,QAAQC,IAAIjB,GAVQ,yBAYpBD,GAAa,GAZO,6EAAH,sDAgBrBS,EAAgBf,EAlBI,CAmBrB,GAAE,CAACA,EAASO,KAGX,4BACGF,IAAa,SAAC,IAAD,KACd,SAAC,KAAD,CAAMoB,GAAId,EAAV,sBACA,iBAAKe,UAAWC,EAAAA,EAAAA,eAAhB,WACE,gBAAKD,UAAWC,EAAAA,EAAAA,aAAhB,UACE,gBACEC,IAAG,yCAAoCzB,EAAa0B,aACpDC,IAAK3B,EAAa4B,WAGtB,iBAAKL,UAAWC,EAAAA,EAAAA,aAAhB,WACE,wBAAKxB,EAAa4B,SAClB,wCAAgB5B,EAAa6B,iBAC7B,uCACY,kBADZ,IACoB7B,EAAa8B,aAEjC,mCAAW9B,EAAae,gBAhB9B,0BAoBE,wBACE,SAAC,KAAD,CAAMO,GAAG,OAAOb,MAAO,CAAEC,KAAMF,GAA/B,qBAIF,wBACE,SAAC,KAAD,CAAMc,GAAG,UAAUb,MAAO,CAAEC,KAAMF,GAAlC,uBAIF,mBACA,SAAC,KAAD,MAGL,C,+LCtEDuB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAU,sBAAuB,CACtDG,OAAQ,CACNC,KAAM,KAHqB,uBACvBC,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qDASjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAU,iBAAkB,CACjDG,OAAQ,CACNI,MAAAA,KAHyB,uBACrBF,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,sDASfvB,EAAY,mCAAG,WAAMhB,GAAN,yFACHkC,EAAAA,EAAAA,IAAA,iBAAoBlC,IADjB,uBAClBuC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAc,mCAAG,WAAM1C,GAAN,yFACLkC,EAAAA,EAAAA,IAAA,iBAAoBlC,EAApB,aADK,uBACpBuC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAW,mCAAG,WAAM3C,GAAN,yFACFkC,EAAAA,EAAAA,IAAA,iBAAoBlC,EAApB,aADE,uBACjBuC,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qD,oBClCxB,KAAgB,eAAiB,qC","sources":["pages/MovieDetails.jsx","services/api.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails.module.css?6cd2"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { getMovieById } from 'services/api';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(movieId);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState('');\n  const location = useLocation();\n  const backLinkHref = location?.state?.from ?? '/movies';\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const getMovieDetails = async movieId => {\n      try {\n        setIsLoading(true);\n        let MovieDataById = await getMovieById(movieId);\n        const genres = MovieDataById.genres.map(el => el.name);\n\n        MovieDataById.genres = genres;\n        setMovieDetails(MovieDataById);\n      } catch (error) {\n        setErrors(error.message);\n        console.log(errors);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovieDetails(movieId);\n  }, [movieId, errors]);\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      <Link to={backLinkHref}>Go back</Link>\n      <div className={css.DetailsWrapper}>\n        <div className={css.ImageWrapper}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n            alt={movieDetails.title}\n          />\n        </div>\n        <div className={css.MovieDetails}>\n          <h2>{movieDetails.title}</h2>\n          <p>User score: {movieDetails.vote_average}</p>\n          <p>\n            Overview: <br /> {movieDetails.overview}\n          </p>\n          <p>Genres:{movieDetails.genres}</p>\n        </div>\n      </div>\n      Additional information\n      <p>\n        <Link to=\"cast\" state={{ from: backLinkHref }}>\n          Cast\n        </Link>\n      </p>\n      <p>\n        <Link to=\"reviews\" state={{ from: backLinkHref }}>\n          Review\n        </Link>\n      </p>\n      <hr />\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '44d416356c22cc8e7735ee915c193364',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get('/search/movie/', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getReviewsById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data;\n};\n\nexport const getCastById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data;\n};\n///\n","// extracted by mini-css-extract-plugin\nexport default {\"DetailsWrapper\":\"MovieDetails_DetailsWrapper__JrniJ\"};"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","errors","setErrors","location","useLocation","backLinkHref","state","from","useEffect","getMovieDetails","getMovieById","MovieDataById","genres","map","el","name","message","console","log","to","className","css","src","poster_path","alt","title","vote_average","overview","axios","api_key","getTrendingMovies","params","page","data","getMovieByQuery","query","getReviewsById","getCastById"],"sourceRoot":""}